import javax.swing.*;
import java.awt.*;

/**
 * Dashboard - Beautiful version with top header, centered rounded buttons,
 * and direct tab selection from MiniProjectApp.
 */
public class Dashboard extends JFrame {

    public Dashboard() {
        setTitle("Vehicle Service Centre - Dashboard");
        setSize(1100, 700);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);
        setLayout(new BorderLayout());

        // 🌈 Top Header
        JPanel headerPanel = new JPanel();
        headerPanel.setBackground(new Color(0, 102, 204));
        headerPanel.setPreferredSize(new Dimension(1100, 80));

        JLabel lblWelcome = new JLabel("Welcome to Vehicle Service Centre", JLabel.CENTER);
        lblWelcome.setFont(new Font("Segoe UI", Font.BOLD, 28));
        lblWelcome.setForeground(Color.WHITE);
        headerPanel.add(lblWelcome);
        add(headerPanel, BorderLayout.NORTH);

        // 🧭 Center Panel for Buttons
        JPanel centerPanel = new JPanel();
        centerPanel.setLayout(new GridLayout(3, 2, 40, 40));
        centerPanel.setBorder(BorderFactory.createEmptyBorder(80, 200, 80, 200));
        centerPanel.setBackground(Color.WHITE);

        // 🖱️ Create Stylish Rounded Buttons
        JButton btnCustomer = createRoundedButton("🧍  Customer", new Color(0, 153, 255));
        JButton btnVehicle = createRoundedButton("🚗  Vehicle", new Color(0, 204, 153));
        JButton btnAppointment = createRoundedButton("📅  Appointments", new Color(255, 153, 51));
        JButton btnService = createRoundedButton("🛠️  Service History", new Color(204, 102, 255));
        JButton btnPayment = createRoundedButton("💳  Payments", new Color(255, 102, 102));
        JButton btnReport = createRoundedButton("📊  Reports", new Color(102, 178, 255));

        centerPanel.add(btnCustomer);
        centerPanel.add(btnVehicle);
        centerPanel.add(btnAppointment);
        centerPanel.add(btnService);
        centerPanel.add(btnPayment);
        centerPanel.add(btnReport);

        add(centerPanel, BorderLayout.CENTER);

        // 🚪 Logout Button at Bottom
        JButton btnLogout = new JButton("🚪 Logout");
        btnLogout.setBackground(new Color(255, 77, 77));
        btnLogout.setForeground(Color.WHITE);
        btnLogout.setFont(new Font("Segoe UI", Font.BOLD, 14));
        btnLogout.setFocusPainted(false);
        btnLogout.setBorder(BorderFactory.createEmptyBorder(10, 20, 10, 20));

        JPanel bottomPanel = new JPanel();
        bottomPanel.setBackground(Color.WHITE);
        bottomPanel.add(btnLogout);
        add(bottomPanel, BorderLayout.SOUTH);

        // ⚙️ Button Actions
        btnCustomer.addActionListener(e -> openSection("Customer"));
        btnVehicle.addActionListener(e -> openSection("Vehicle"));
        btnAppointment.addActionListener(e -> openSection("Service Appointment"));
        btnService.addActionListener(e -> openSection("Service History"));
        btnPayment.addActionListener(e -> openSection("Payment"));
        btnReport.addActionListener(e -> openSection("Reports"));
        btnLogout.addActionListener(e -> {
            dispose();
            new LoginPage().setVisible(true);
        });
    }

    // 🪄 Rounded Button Creator
    private JButton createRoundedButton(String text, Color bgColor) {
        JButton btn = new JButton(text) {
            @Override
            protected void paintComponent(Graphics g) {
                Graphics2D g2 = (Graphics2D) g.create();
                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

                // Background
                g2.setColor(getModel().isArmed() ? bgColor.darker() : bgColor);
                g2.fillRoundRect(0, 0, getWidth(), getHeight(), 30, 30);

                // Text
                FontMetrics fm = g2.getFontMetrics();
                Rectangle r = getBounds();
                int x = (r.width - fm.stringWidth(getText())) / 2;
                int y = (r.height - fm.getHeight()) / 2 + fm.getAscent();
                g2.setColor(Color.WHITE);
                g2.drawString(getText(), x, y);

                g2.dispose();
            }

            @Override
            protected void paintBorder(Graphics g) {
                // No border
            }

            @Override
            public void setContentAreaFilled(boolean b) {}
        };

        btn.setFont(new Font("Segoe UI", Font.BOLD, 16));
        btn.setFocusPainted(false);
        btn.setCursor(Cursor.getPredefinedCursor(Cursor.HAND_CURSOR));
        btn.setBorder(BorderFactory.createEmptyBorder(15, 25, 15, 25));
        return btn;
    }

    // 🧩 Opens the MiniProjectApp CRUD window with the selected tab
    private void openSection(String section) {
        try {
            MiniProjectApp app = new MiniProjectApp(section);
            app.setVisible(true);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Error opening " + section + ": " + ex.getMessage(),
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
    }
}
